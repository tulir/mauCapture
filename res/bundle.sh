#!/bin/bash

SPLIT_FILES=${SPLIT_FILES:-0}
if [[ $SPLIT_FILES -ne 0 ]] && [[ $SPLIT_FILES -ne 1 ]]; then
	echo "SPLIT_FILES must be 0 (false) or 1 (true)"
	exit 1
fi

function write_header {
	echo "// Autogenerated with bundle.sh" > $1
	echo "// DO NOT MODIFY" >> $1
	echo >> $1
	echo "package res" >> $1
	echo >> $1
	echo 'import "fyne.io/fyne"' >> $1
}

if [[ $SPLIT_FILES -eq 0 ]]; then
	OUTPUT=${OUTPUT:-"bundle.go"}
	echo "Bundling all files to $OUTPUT"
	write_header "$OUTPUT"
fi

for file in *.svg; do
	echo "Bundling $file"
	name=`echo "$file" | cut -d'.' -f1`
	name="${name^}"
	if [[ $SPLIT_FILES -eq 1 ]]; then
		output=`echo "$file" | tr '[:upper:]' '[:lower:]'`.go
		write_header "$output"
	else
		output="$OUTPUT"
	fi
	echo >> $output
	echo "var $name = &fyne.StaticResource{" >> $output
	echo -e "\tStaticName:    \"$file\"," >> $output
	echo -e '\tStaticContent: []byte(`'$(cat $file)'`),' >> $output
	echo "}" >> $output
done

for file in *.png *.ttf
do
	echo "Bundling $file"
	name=`echo "$file" | cut -d'.' -f1`
	name="${name^}"
	if [[ $SPLIT_FILES -eq 1 ]]; then
		output=`echo "$file" | tr '[:upper:]' '[:lower:]'`.go
		write_header "$output"
	else
		output="$OUTPUT"
	fi
	echo >> $output
	fyne bundle -append -name "$name" $file >> $output
done
